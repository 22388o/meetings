20:04:59 <valwal> #startmeeting meeting-name
20:04:59 <lndev-bot> Meeting started Mon Aug 16 20:04:59 2021 UTC and is due to finish in 60 minutes.  The chair is valwal. Information about MeetBot at http://wiki.debian.org/MeetBot.
20:04:59 <lndev-bot> Useful Commands: #action #agreed #help #info #idea #link #topic #startvote.
20:04:59 <lndev-bot> The meeting name has been set to 'meeting_name'
20:05:13 <valwal> #topic warnings
20:05:33 <ariard> t-bast: yeah and i've discussed with other coredev orgas and they're okay to distribute more LN-invits :)
20:05:43 <BlueMatt> valwal: you gots to startmeeting
20:05:43 <BlueMatt> with the #s
20:05:54 <niftynei> she did! lol
20:06:02 <niftynei> i think we're on topic "warnings"
20:06:15 <BlueMatt> I left a number of comments on the pr
20:06:21 <BlueMatt> so waiting on those to be responded to
20:06:32 <BlueMatt> t-bast: commented as well, and i think we agreed on some proposed changes
20:06:32 <t-bast> Sounds like rusty needs to rebase and address comments
20:06:35 <BlueMatt> further, the pr needs to be rebased
20:06:40 <t-bast> But generally it's a concept ACK, right?
20:06:44 <BlueMatt> so i think its basically a "waiting on rusty to respond" thing
20:06:55 <valwal> ok
20:07:04 <valwal> #topic channel_type s
20:07:12 * rusty wakes up
20:07:27 <valwal> oh hey rusty!
20:07:33 <t-bast> hey rusty!
20:07:49 <BlueMatt> yea, def concept ack here, iirc lnd even has a pr to implement it
20:08:07 <rusty> OK, I will respond on PR.  I basically plastered advice over everywhere we said you MUST erorr, wherever it was theoretically psosible to recover, said you MAY send warning.
20:08:25 <rusty> (You can still send error!  And if you've closed, of course you should)
20:08:43 <BlueMatt> yea, the LDK implementation of the warnings message stuff that I pr'd largely ignored half of the error -> warning changes, since I'm not a fan of them and needs discussion on the pr :)
20:08:55 <niftynei> is it correct to say that "error -> close channel"/ "warning -> disconnect" or is that too broad a generalization
20:09:16 <BlueMatt> niftynei: no, you shouldnt even disconnect on warning
20:09:23 <t-bast> niftynei: usually it's even better to send a warning without disconnecting
20:09:42 <t-bast> niftynei: to avoid reconnect loops where your peer resends the same problematic message
20:09:49 <roasbeef> guess depends on what bleeds over to this new message, imo we should just have a new one that replaces all usage of the prior error message w/ richer context
20:09:49 <rusty> niftynei: error is "I have closed the channel, you should too", basically.
20:10:22 <roasbeef> most valuable error I've seen in the wild so far is the error when you get an invalid sig, have used that to find a bunch of state machine divergences within lnd, and most recently that HTLC ordering issue
20:10:40 <niftynei> the dual-funding impl in c-lightning uses warnings pretty much entirely; it fails the connection also tho as a sign to restart the negotiation. but that's maybe a niche case
20:10:54 <t-bast> roasbeef: true, that's the error that helped figure out many real bugs in the wild
20:11:10 <BlueMatt> roasbeef: that seems like a wholly separate discussion
20:11:25 <BlueMatt> roasbeef: the current warning pr is all about "how to tell the counterparty that you're *not* closing the channel but something happened
20:11:29 <rusty> BlueMatt: true, but it'd be a nice discussion to have.  Fortunately both warning and error are extensible.
20:11:32 <t-bast> niftynei: gotcha, disconnecting makes sense in that case, it's probably a case-by-case basis whether you should disconnect after sending a warning or not
20:11:36 <BlueMatt> roasbeef: if you want rich errors or whatever, we can do that in a new message.