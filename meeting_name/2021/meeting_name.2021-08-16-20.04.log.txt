20:04:59 <valwal> #startmeeting meeting-name
20:04:59 <lndev-bot> Meeting started Mon Aug 16 20:04:59 2021 UTC and is due to finish in 60 minutes.  The chair is valwal. Information about MeetBot at http://wiki.debian.org/MeetBot.
20:04:59 <lndev-bot> Useful Commands: #action #agreed #help #info #idea #link #topic #startvote.
20:04:59 <lndev-bot> The meeting name has been set to 'meeting_name'
20:05:13 <valwal> #topic warnings
20:05:33 <ariard> t-bast: yeah and i've discussed with other coredev orgas and they're okay to distribute more LN-invits :)
20:05:43 <BlueMatt> valwal: you gots to startmeeting
20:05:43 <BlueMatt> with the #s
20:05:54 <niftynei> she did! lol
20:06:02 <niftynei> i think we're on topic "warnings"
20:06:15 <BlueMatt> I left a number of comments on the pr
20:06:21 <BlueMatt> so waiting on those to be responded to
20:06:32 <BlueMatt> t-bast: commented as well, and i think we agreed on some proposed changes
20:06:32 <t-bast> Sounds like rusty needs to rebase and address comments
20:06:35 <BlueMatt> further, the pr needs to be rebased
20:06:40 <t-bast> But generally it's a concept ACK, right?
20:06:44 <BlueMatt> so i think its basically a "waiting on rusty to respond" thing
20:06:55 <valwal> ok
20:07:04 <valwal> #topic channel_type s
20:07:12 * rusty wakes up
20:07:27 <valwal> oh hey rusty!
20:07:33 <t-bast> hey rusty!
20:07:49 <BlueMatt> yea, def concept ack here, iirc lnd even has a pr to implement it
20:08:07 <rusty> OK, I will respond on PR.  I basically plastered advice over everywhere we said you MUST erorr, wherever it was theoretically psosible to recover, said you MAY send warning.
20:08:25 <rusty> (You can still send error!  And if you've closed, of course you should)
20:08:43 <BlueMatt> yea, the LDK implementation of the warnings message stuff that I pr'd largely ignored half of the error -> warning changes, since I'm not a fan of them and needs discussion on the pr :)
20:08:55 <niftynei> is it correct to say that "error -> close channel"/ "warning -> disconnect" or is that too broad a generalization
20:09:16 <BlueMatt> niftynei: no, you shouldnt even disconnect on warning
20:09:23 <t-bast> niftynei: usually it's even better to send a warning without disconnecting
20:09:42 <t-bast> niftynei: to avoid reconnect loops where your peer resends the same problematic message
20:09:49 <roasbeef> guess depends on what bleeds over to this new message, imo we should just have a new one that replaces all usage of the prior error message w/ richer context
20:09:49 <rusty> niftynei: error is "I have closed the channel, you should too", basically.
20:10:22 <roasbeef> most valuable error I've seen in the wild so far is the error when you get an invalid sig, have used that to find a bunch of state machine divergences within lnd, and most recently that HTLC ordering issue
20:10:40 <niftynei> the dual-funding impl in c-lightning uses warnings pretty much entirely; it fails the connection also tho as a sign to restart the negotiation. but that's maybe a niche case
20:10:54 <t-bast> roasbeef: true, that's the error that helped figure out many real bugs in the wild
20:11:10 <BlueMatt> roasbeef: that seems like a wholly separate discussion
20:11:25 <BlueMatt> roasbeef: the current warning pr is all about "how to tell the counterparty that you're *not* closing the channel but something happened
20:11:29 <rusty> BlueMatt: true, but it'd be a nice discussion to have.  Fortunately both warning and error are extensible.
20:11:32 <t-bast> niftynei: gotcha, disconnecting makes sense in that case, it's probably a case-by-case basis whether you should disconnect after sending a warning or not
20:11:36 <BlueMatt> roasbeef: if you want rich errors or whatever, we can do that in a new message.
20:11:43 <BlueMatt> or extending error/warning, as rusty notes
20:11:48 <niftynei> since "establishing a channel" you can safely restart the negotiation etc, yeah ok seems like a niche rather than a broad rule
20:12:37 <BlueMatt> rusty: indeed, its maybe a good thing to do, but I do feel like it needs at least a strawman proposal before we have a live discussion, otherwise we go in circles forever :)
20:12:43 <roasbeef> how useful will this warning message be if there's no new strucutred information? means we just all need to string match again...
20:13:00 <roasbeef> there's an ML thread where carla and rusty have started to work out a more structutred approach, I thought that was meant to be a part of this?
20:13:02 <BlueMatt> roasbeef: it allows you to implement error messages properly again :p
20:13:03 <t-bast> roasbeef: it's really useful in closing negotiation for example
20:13:16 <BlueMatt> ie, actually close the channel
20:13:21 <t-bast> roasbeef: and when using channel_type to open a new channel with a non-default type
20:13:28 <ariard> niftynei: afaict your usage of the warnings in the dual-funding context to rollback your negotiation matches the richer error context intent of roasbeef?
20:13:29 <roasbeef> t-bast: yeh I can see that being the case, but will it be if ppl send diff error strings vs having structured records? (using TLV)
20:13:49 <BlueMatt> roasbeef: yep, we can extend these messages with tlvs when there's a spec for it :)
20:13:52 <roasbeef> and the chan_type case is one that can be programtically handled most of the time
20:13:57 <t-bast> roasbeef: I agree it's still just a string that the node operator needs to understand, but it's a good thing to start with!
20:14:04 <rusty> roasbeef: nah, this predates that, it's old...
20:14:07 <BlueMatt> in the mean time, just *adding* the warning message is nice, cause we can use it in places where we dont want to close the channel but want to notify an error
20:14:26 <BlueMatt> cause its actually nice that we have the error messages which close channels imo
20:14:31 <BlueMatt> or notify counterparties we've closed
20:14:35 <roasbeef> if there's no new structured data, then how's this imrpove on the other error at all?
20:14:44 <roasbeef> given you can also use that to send out message, and most impls don't auto force close on it anymore
20:14:52 <t-bast> I agree with BlueMatt, it's already helpful in practice so let's roll it out, and improve later by adding more structure as we discover what we often need
20:14:56 <ariard> roasbeef: not force-closing the chan
20:15:16 <BlueMatt> roasbeef: yep, so we should *start* force closing on errors again :)
20:15:19 <ariard> which we already do quite liberally in LDK
20:15:23 <BlueMatt> cause, like, that's what the spec does
20:15:37 <roasbeef> that was always a dubious requirement imo
20:15:40 <BlueMatt> roasbeef: if you feel strongly, I suppose we could change the *current* error message message type to "warning" and add a new error message :)
20:15:50 <BlueMatt> roasbeef: its more "I've closed the channel, you should too, cause its gone"
20:15:52 <roasbeef> caused a lot of force closes early on when ppl disgareed on fees
20:16:28 <roasbeef> BlueMatt: yeh carla is working on that, there's a thread on the ML tracking the latest discussion (either new message or just extend prior w/ TLV data to be parsed)
20:16:38 <BlueMatt> roasbeef: no again thats separate
20:16:48 <BlueMatt> adding a tlv to indicate a type is something we can do *on top*
20:17:07 <niftynei> ariard: not exactly, it's still "string messages that need to be parsed", but you could definitely codify the errors via a TLV in the warnings!
20:17:34 <BlueMatt> roasbeef: do you have a specific suggestion for the warning message prs aside from "I dont care about this"?
20:17:43 <BlueMatt> because otherwise I think we can just go forward with it